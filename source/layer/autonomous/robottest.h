#ifndef ROBOSOCCER_LAYER_AUTONOMOUS_ROBOTTEST_H
#define ROBOSOCCER_LAYER_AUTONOMOUS_ROBOTTEST_H

#include <cppunit/TestFixture.h>
#include <cppunit/extensions/HelperMacros.h>

namespace RoboSoccer
{
namespace Common
{
namespace Time
{
	class WatchMock;
}
namespace Logging
{
	class LoggerMock;
}
namespace Routing
{
	class RouterMock;
	class RouterImpl;
	class FieldPositionCheckerMock;
}
}
namespace Layer
{
namespace Abstraction
{
	class ControllableRobotMock;
}
namespace Autonomous
{
	class RobotImpl;
	class IntelligentBallMock;
	class ObstacleFetcherMock;

	class RobotTest :
			public CPPUNIT_NS::TestFixture
	{
		CPPUNIT_TEST_SUITE(RobotTest);
		CPPUNIT_TEST(goTo_alreadyAtPosition_noCallToMoveRobot);
		CPPUNIT_TEST(goTo_notYetAtPosition_oneCallToMoveRobot);
		CPPUNIT_TEST(goTo_twiceWithSameTarget_oneCallToMoveRobot);
		CPPUNIT_TEST(goTo_positionOutsideTheFieldAndDriveSlowlyAtTheEnd_updateDoesNotCrash);
		CPPUNIT_TEST(goToDirect_alreadyAtPosition_noCallToMoveRobot);
		CPPUNIT_TEST(goToDirect_notYetAtPosition_oneCallToMoveRobot);
		CPPUNIT_TEST(goToDirect_twiceWithSameTarget_oneCallToMoveRobot);
		CPPUNIT_TEST(update_goToDirectAndInitialRotationNotReached_robotGotCallToTurnTowardsTarget);
		CPPUNIT_TEST(update_goToDirectAndInitialRotationNotReached_robotGotNoCallToDrive);
		CPPUNIT_TEST(update_goToDirectAndInitialRotationNotReachedTwiceCalled_robotGotNoAdditionalCallToTurn);
		CPPUNIT_TEST(update_goToDirectAndInitialRotationNotReachedButMovementStopped_robotGotGallToDriveToTargetImprecise);
		CPPUNIT_TEST(update_goToDirectAndPositionNotReached_robotGotCallToDriveToTargetImprecise);
		CPPUNIT_TEST(update_goToDirectAndPositionNotReached_robotGotNoCallToTurnTowardsTarget);
		CPPUNIT_TEST(update_goToDirectAndPositionNotReachedTwiceCalled_robotGotNoAdditionalCallToDriveToTargetImprecise);
		CPPUNIT_TEST(update_goToDirectAndPositionNotreachedButMovementStopped_robotGotCallToTurnTo);
		CPPUNIT_TEST(update_goToDirectAndFinalRotationNotReached_robotGotCallToTurn);
		CPPUNIT_TEST(update_goToDirectAndFinalRotationNotReached_robotGotNoCallToDrive);
		CPPUNIT_TEST(update_goToDirectAndFinalRotationNotReachedTwiceCalled_robotGotNoAdditionalCallToTurn);
		CPPUNIT_TEST(update_goToDirectAndInitialRotationReachedButRobotStillMoving_robotGotNoAdditionalCallsToMove);
		CPPUNIT_TEST(update_goToDirectAndPositionReachedButRobotStillMoving_robotGotNoAdditionalCallsToMove);
		CPPUNIT_TEST(update_goToDirectAndFinalRotationReachedButRobotStillMoving_robotGotNoAdditionalCallsToMove);
		CPPUNIT_TEST(update_goToDirectAndInitalRotationReachedAndMovementStopped_robotGotCallToMove);
		CPPUNIT_TEST(update_goToDirectAndPositionReachedAndMovementStopped_robotGotCallToTurn);
		CPPUNIT_TEST(update_goToAndinitialRotationNotReached_robotGotCallToTurnTowardsTarget);
		CPPUNIT_TEST(update_goToAndinitialRotationNotReached_robotGotNoCallToDrive);
		CPPUNIT_TEST(update_goToAndinitialRotationNotReachedTwiceCalled_robotGotNoAdditionalCallToTurn);
		CPPUNIT_TEST(update_goToAndinitialRotationNotReachedButMovementStopped_robotGotGallToDriveToTargetImprecise);
		CPPUNIT_TEST(update_goToAndpositionNotReached_robotGotCallToDriveToTargetImprecise);
		CPPUNIT_TEST(update_goToAndpositionNotReached_robotGotNoCallToTurnTowardsTarget);
		CPPUNIT_TEST(update_goToAndpositionNotReachedTwiceCalled_robotGotNoAdditionalCallToDriveToTargetImprecise);
		CPPUNIT_TEST(update_goToAndpositionNotreachedButMovementStopped_robotGotCallToTurnTo);
		CPPUNIT_TEST(update_goToAndfinalRotationNotReached_robotGotCallToTurn);
		CPPUNIT_TEST(update_goToAndfinalRotationNotReached_robotGotNoCallToDrive);
		CPPUNIT_TEST(update_goToAndfinalRotationNotReachedTwiceCalled_robotGotNoAdditionalCallToTurn);
		CPPUNIT_TEST(update_goToAndfinalRotationNotReachedButMovementStopped_reachedTarget);
		CPPUNIT_TEST(update_goToAndinitialRotationReachedButRobotStillMoving_robotGotNoAdditionalCallsToMove);
		CPPUNIT_TEST(update_goToAndpositionReachedButRobotStillMoving_robotGotNoAdditionalCallsToMove);
		CPPUNIT_TEST(update_goToAndfinalRotationReachedButRobotStillMoving_robotGotNoAdditionalCallsToMove);
		CPPUNIT_TEST(update_goToAndinitalRotationReachedAndMovementStopped_robotGotCallToMove);
		CPPUNIT_TEST(update_goToAndpositionReachedAndMovementStopped_robotGotCallToTurn);
		CPPUNIT_TEST(update_goToAndinitialRotationNotReachedAndThreePointsInRoute_turningToSecondPoint);
		CPPUNIT_TEST(update_goToAndinitialRotationReachedAndThreePointsInRoute_robotGotCallToMoveToSecondPoint);
		CPPUNIT_TEST(update_goToAndsecondPositionReachedAndRotationNotReached_turningToThirdPoint);
		CPPUNIT_TEST(update_goToAndsecondPositionReachedAndRotationReached_robotGotCallToMoveToThirdPoint);
		CPPUNIT_TEST(update_goToAndthirdPositionReachedAndFinalRotationNotReached_turningToFinalRotation);
		CPPUNIT_TEST(update_goToAndinitialRotationReachedAndThreePointsInRouteAndMovementStoppedByRobot_robotGotCallToMoveToSecondPoint);
		CPPUNIT_TEST(update_goToAndsecondPositionReachedAndRotationNotReachedAndAllIntermediateMovementsStoppedByRobot_turningToThirdPoint);
		CPPUNIT_TEST(update_goToAndsecondPositionReachedAndRotationReachedAndAllIntermediateMovementsStoppedByRobot_robotGotCallToMoveToThirdPoint);
		CPPUNIT_TEST(update_goToAndinitialRotationReachedAndRouteChanged_robotGotTwoCallsToTurn);
		CPPUNIT_TEST(update_goToAndinitialRotationReachedAndRouteChangedAndinitialRotationReachedAgain_robotGotTwoCallsToDrive);
		CPPUNIT_TEST(update_goToAndinitialRotationNotReachedAndObstacleMovedALittleBit_turningToSecondPoint);
		CPPUNIT_TEST(update_goToAndinitialRotationNotReachedAndObstacleMoved_turningToSecondPointOfNewRoute);
		CPPUNIT_TEST(update_goToAndignoreBall_routePointsCountIs2);
		CPPUNIT_TEST(update_goToAndcloseToThirdPositionAndDriveSlowlyAtTheEnd_robotGotCallToDriveSlowly);
		CPPUNIT_TEST(update_goToAndtargetNotInsideField_noCallToDriveAndTurn);
		CPPUNIT_TEST(update_goToAndobstacleOnTargetAndIgnoreObstacle_robotGotCallToDrive);
		CPPUNIT_TEST(update_kickAndTurnToReachedTarget_oneCallToKick);
		CPPUNIT_TEST(update_empty_robotGotCallToUpdate);
		CPPUNIT_TEST(update_goToAndAtTarget_reachedTarget);
		CPPUNIT_TEST(update_goToDirectAndAtTarget_reachedTarget);
		CPPUNIT_TEST(getObstacle_empty_sameAsFromControllableRobot);
		CPPUNIT_TEST(getObstacles_empty_oneWhichIsSameAsFromControllableRobot);
		CPPUNIT_TEST_SUITE_END();

	public:
		virtual void setUp();
		virtual void tearDown();

	private:
		void goTo_alreadyAtPosition_noCallToMoveRobot();
		void goTo_notYetAtPosition_oneCallToMoveRobot();
		void goTo_twiceWithSameTarget_oneCallToMoveRobot();
		void goTo_positionOutsideTheFieldAndDriveSlowlyAtTheEnd_updateDoesNotCrash();
		void goToDirect_alreadyAtPosition_noCallToMoveRobot();
		void goToDirect_notYetAtPosition_oneCallToMoveRobot();
		void goToDirect_twiceWithSameTarget_oneCallToMoveRobot();
		void update_goToDirectAndInitialRotationNotReached_robotGotCallToTurnTowardsTarget();
		void update_goToDirectAndInitialRotationNotReached_robotGotNoCallToDrive();
		void update_goToDirectAndInitialRotationNotReachedTwiceCalled_robotGotNoAdditionalCallToTurn();
		void update_goToDirectAndInitialRotationNotReachedButMovementStopped_robotGotGallToDriveToTargetImprecise();
		void update_goToDirectAndPositionNotReached_robotGotCallToDriveToTargetImprecise();
		void update_goToDirectAndPositionNotReached_robotGotNoCallToTurnTowardsTarget();
		void update_goToDirectAndPositionNotReachedTwiceCalled_robotGotNoAdditionalCallToDriveToTargetImprecise();
		void update_goToDirectAndPositionNotreachedButMovementStopped_robotGotCallToTurnTo();
		void update_goToDirectAndFinalRotationNotReached_robotGotCallToTurn();
		void update_goToDirectAndFinalRotationNotReached_robotGotNoCallToDrive();
		void update_goToDirectAndFinalRotationNotReachedTwiceCalled_robotGotNoAdditionalCallToTurn();
		void update_goToDirectAndInitialRotationReachedButRobotStillMoving_robotGotNoAdditionalCallsToMove();
		void update_goToDirectAndPositionReachedButRobotStillMoving_robotGotNoAdditionalCallsToMove();
		void update_goToDirectAndFinalRotationReachedButRobotStillMoving_robotGotNoAdditionalCallsToMove();
		void update_goToDirectAndInitalRotationReachedAndMovementStopped_robotGotCallToMove();
		void update_goToDirectAndPositionReachedAndMovementStopped_robotGotCallToTurn();
		void update_goToAndinitialRotationNotReached_robotGotCallToTurnTowardsTarget();
		void update_goToAndinitialRotationNotReached_robotGotNoCallToDrive();
		void update_goToAndinitialRotationNotReachedTwiceCalled_robotGotNoAdditionalCallToTurn();
		void update_goToAndinitialRotationNotReachedButMovementStopped_robotGotGallToDriveToTargetImprecise();
		void update_goToAndpositionNotReached_robotGotCallToDriveToTargetImprecise();
		void update_goToAndpositionNotReached_robotGotNoCallToTurnTowardsTarget();
		void update_goToAndpositionNotReachedTwiceCalled_robotGotNoAdditionalCallToDriveToTargetImprecise();
		void update_goToAndpositionNotreachedButMovementStopped_robotGotCallToTurnTo();
		void update_goToAndfinalRotationNotReached_robotGotCallToTurn();
		void update_goToAndfinalRotationNotReached_robotGotNoCallToDrive();
		void update_goToAndfinalRotationNotReachedTwiceCalled_robotGotNoAdditionalCallToTurn();
		void update_goToAndfinalRotationNotReachedButMovementStopped_reachedTarget();
		void update_goToAndinitialRotationReachedButRobotStillMoving_robotGotNoAdditionalCallsToMove();
		void update_goToAndpositionReachedButRobotStillMoving_robotGotNoAdditionalCallsToMove();
		void update_goToAndfinalRotationReachedButRobotStillMoving_robotGotNoAdditionalCallsToMove();
		void update_goToAndinitalRotationReachedAndMovementStopped_robotGotCallToMove();
		void update_goToAndpositionReachedAndMovementStopped_robotGotCallToTurn();
		void update_goToAndinitialRotationNotReachedAndThreePointsInRoute_turningToSecondPoint();
		void update_goToAndinitialRotationReachedAndThreePointsInRoute_robotGotCallToMoveToSecondPoint();
		void update_goToAndsecondPositionReachedAndRotationNotReached_turningToThirdPoint();
		void update_goToAndsecondPositionReachedAndRotationReached_robotGotCallToMoveToThirdPoint();
		void update_goToAndthirdPositionReachedAndFinalRotationNotReached_turningToFinalRotation();
		void update_goToAndinitialRotationReachedAndThreePointsInRouteAndMovementStoppedByRobot_robotGotCallToMoveToSecondPoint();
		void update_goToAndsecondPositionReachedAndRotationNotReachedAndAllIntermediateMovementsStoppedByRobot_turningToThirdPoint();
		void update_goToAndsecondPositionReachedAndRotationReachedAndAllIntermediateMovementsStoppedByRobot_robotGotCallToMoveToThirdPoint();
		void update_goToAndinitialRotationReachedAndRouteChanged_robotGotTwoCallsToTurn();
		void update_goToAndinitialRotationReachedAndRouteChangedAndinitialRotationReachedAgain_robotGotTwoCallsToDrive();
		void update_goToAndinitialRotationNotReachedAndObstacleMovedALittleBit_turningToSecondPoint();
		void update_goToAndinitialRotationNotReachedAndObstacleMoved_turningToSecondPointOfNewRoute();
		void update_goToAndignoreBall_routePointsCountIs2();
		void update_goToAndcloseToThirdPositionAndDriveSlowlyAtTheEnd_robotGotCallToDriveSlowly();
		void update_goToAndtargetNotInsideField_noCallToDriveAndTurn();
		void update_goToAndobstacleOnTargetAndIgnoreObstacle_robotGotCallToDrive();
		void update_kickAndTurnToReachedTarget_oneCallToKick();
		void update_empty_robotGotCallToUpdate();
		void update_goToAndAtTarget_reachedTarget();
		void update_goToDirectAndAtTarget_reachedTarget();
		void getObstacle_empty_sameAsFromControllableRobot();
		void getObstacles_empty_oneWhichIsSameAsFromControllableRobot();

	private:
		Abstraction::ControllableRobotMock *m_hardwareRobot;
		Common::Time::WatchMock *m_watch;
		Common::Logging::LoggerMock *m_logger;
		Common::Routing::RouterMock *m_routerMock;
		Common::Routing::RouterImpl *m_router;
		Common::Routing::FieldPositionCheckerMock *m_field;
		ObstacleFetcherMock *m_obstacleFetcher;
		RobotImpl *m_robot;
		RobotImpl *m_robotWithRealRouter;
		IntelligentBallMock *m_ball;
	};
}
}
}

#endif
